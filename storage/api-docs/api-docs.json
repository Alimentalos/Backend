{
    "openapi": "3.0.0",
    "info": {
        "title": "Alimentalos API",
        "description": "Official Alimentalos API Documentation",
        "contact": {
            "email": "iantorres@outlook.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "v.7.0.1"
    },
    "servers": [
        {
            "url": "https://www.alimentalos.cl/api",
            "description": "Backend production server"
        },
        {
            "url": "https://www.alimentalos.cl/api"
        }
    ],
    "paths": {
        "/find": {
            "get": {
                "tags": [
                    "Find"
                ],
                "summary": "Find the last known location of resources.",
                "description": "Returns resource locations.",
                "operationId": "findResources",
                "parameters": [
                    {
                        "name": "identifiers",
                        "in": "query",
                        "description": "Array with unique identifiers",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Resource type that need to be considered",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "items": {
                                "type": "string",
                                "default": "pets",
                                "enum": [
                                    "pets",
                                    "users",
                                    "devices"
                                ]
                            }
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Start date that need to be considered filter, only dates with format Y-m-d H:i:s are accepted",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "End date that need to be considered filter, only dates with format Y-m-d H:i:s are accepted",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accuracy",
                        "in": "query",
                        "description": "Max accuracy that need to be considered filter.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Locations retrieved successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/geofences/{uuid}/{type}/accesses": {
            "get": {
                "tags": [
                    "Geofences"
                ],
                "summary": "Get geofence accesses of resource.",
                "description": "Returns the accesses paginated by a default quantity, payload includes pagination links and stats.",
                "operationId": "getGeofenceResourcesAccesses",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Unique identifier of resource",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "Resource type that need to be considered",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "items": {
                                "type": "string",
                                "default": "pets",
                                "enum": [
                                    "users",
                                    "devices",
                                    "pets"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Geofence accesses retrieved successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/locations": {
            "get": {
                "tags": [
                    "Locations"
                ],
                "summary": "Get resource locations.",
                "description": "Returns the locations.",
                "operationId": "getLocations",
                "parameters": [
                    {
                        "name": "identifier",
                        "in": "query",
                        "description": "Resource comma-separated identifiers",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Resource type",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "items": {
                                "type": "string",
                                "default": "pets",
                                "enum": [
                                    "pets",
                                    "users",
                                    "devices"
                                ]
                            }
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Start date used to filter results",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "End date used to filter results",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accuracy",
                        "in": "query",
                        "description": "Max accuracy used to filter results",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Locations retrieved successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Resource doesn't implements has location trait"
                    }
                }
            }
        },
        "/near/{type}": {
            "get": {
                "tags": [
                    "Near"
                ],
                "summary": "Get near resources.",
                "description": "Returns the near located resources paginated by a default quantity, payload includes pagination links and stats.",
                "operationId": "getNearResources",
                "parameters": [
                    {
                        "name": "coordinates",
                        "in": "query",
                        "description": "Comma-separated latitude and longitude",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "Resource type that need to be considered",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "items": {
                                "type": "string",
                                "default": "pets",
                                "enum": [
                                    "users",
                                    "devices",
                                    "pets",
                                    "alerts",
                                    "photos",
                                    "geofences",
                                    "places"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Near resources retrieved successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/refresh": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh authentication token.",
                "description": "Returns the user personal access token.",
                "operationId": "refreshAccessToken",
                "parameters": [
                    {
                        "name": "refresh_token",
                        "in": "query",
                        "description": "The refresh token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Token refreshed successfully"
                    },
                    "401": {
                        "description": "Unauthenticated."
                    }
                }
            }
        },
        "/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register user.",
                "description": "Returns the registered user as JSON Object.",
                "operationId": "registerUser",
                "responses": {
                    "200": {
                        "description": "User registered successfully"
                    },
                    "401": {
                        "description": "Unauthenticated."
                    }
                }
            }
        },
        "/{resource}/{uuid}/accesses": {
            "get": {
                "tags": [
                    "Resources"
                ],
                "summary": "Get accesses of resource.",
                "description": "Returns the accesses paginated by a default quantity, payload includes pagination links and stats.",
                "operationId": "getResourceAccesses",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Unique identifier of resource",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "resource",
                        "in": "path",
                        "description": "Resource type that need to be considered",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "items": {
                                "type": "string",
                                "default": "pets",
                                "enum": [
                                    "pets",
                                    "devices",
                                    "users"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource accesses retrieved successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/{resource}/{uuid}/comments": {
            "get": {
                "tags": [
                    "Resources"
                ],
                "summary": "Get comments of resource.",
                "description": "Returns the comments paginated by a default quantity, payload includes pagination links and stats.",
                "operationId": "getResourceComments",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Unique identifier of resource",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "resource",
                        "in": "path",
                        "description": "Resource type that need to be considered",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "items": {
                                "type": "string",
                                "default": "pets",
                                "enum": [
                                    "pets",
                                    "photos",
                                    "comments",
                                    "alerts",
                                    "groups"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comments retrieved successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            },
            "post": {
                "tags": [
                    "Resources"
                ],
                "summary": "Create comment of resource.",
                "description": "Returns the recently created comment as JSON Object.",
                "operationId": "createResourceComment",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Unique identifier of resource",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "resource",
                        "in": "path",
                        "description": "Resource type that need to be considered",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "items": {
                                "type": "string",
                                "default": "pets",
                                "enum": [
                                    "pets",
                                    "photos",
                                    "comments",
                                    "alerts",
                                    "groups"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comment created successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/{resource}/{uuid}": {
            "get": {
                "tags": [
                    "Resources"
                ],
                "summary": "Get specific resource.",
                "description": "Returns the specified resource as JSON Object.",
                "operationId": "getResource",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Unique identifier of resource",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "resource",
                        "in": "path",
                        "description": "Resource type that need to be considered",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "items": {
                                "type": "string",
                                "default": "devices",
                                "enum": [
                                    "users",
                                    "devices",
                                    "groups",
                                    "pets",
                                    "actions",
                                    "locations",
                                    "geofences",
                                    "photos",
                                    "comments",
                                    "alerts"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource retrieved successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Resources"
                ],
                "summary": "Update specific resource.",
                "description": "Returns the updated resource as JSON Object.",
                "operationId": "updateResource",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Unique identifier of resource",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "resource",
                        "in": "path",
                        "description": "Resource type that need to be considered",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "items": {
                                "type": "string",
                                "default": "devices",
                                "enum": [
                                    "photos",
                                    "alerts",
                                    "comments",
                                    "users",
                                    "devices",
                                    "pets",
                                    "groups",
                                    "geofences"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource updated and retrieved successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Resources"
                ],
                "summary": "Delete specific resource.",
                "description": "Returns message JSON Object response.",
                "operationId": "destroyResource",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Unique identifier of resource",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "resource",
                        "in": "path",
                        "description": "Resource type that need to be considered",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "items": {
                                "type": "string",
                                "default": "devices",
                                "enum": [
                                    "users",
                                    "photos",
                                    "comments",
                                    "actions",
                                    "devices",
                                    "pets",
                                    "geofences",
                                    "groups",
                                    "alerts"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource deleted successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/{resource}/{uuid}/devices": {
            "get": {
                "tags": [
                    "Resources"
                ],
                "summary": "Get devices of resource.",
                "description": "Returns the devices paginated by a default quantity, payload includes pagination links and stats.",
                "operationId": "getResourceDevices",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Unique identifier of resource",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "resource",
                        "in": "path",
                        "description": "Resource type that need to be considered",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "items": {
                                "type": "string",
                                "default": "users",
                                "enum": [
                                    "users",
                                    "groups"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Devices retrieved successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/{resource}/{uuid}/geofences/{geofence}/accesses": {
            "get": {
                "tags": [
                    "Resources"
                ],
                "summary": "Get accesses of resource related to geofence.",
                "description": "Returns the accesses paginated by a default quantity, payload includes pagination links and stats.",
                "operationId": "getResourceGeofenceAccesses",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Unique identifier of resource",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "resource",
                        "in": "path",
                        "description": "Resource type that need to be considered",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "items": {
                                "type": "string",
                                "default": "devices",
                                "enum": [
                                    "devices",
                                    "users",
                                    "pets"
                                ]
                            }
                        }
                    },
                    {
                        "name": "geofence",
                        "in": "path",
                        "description": "Unique identifier of geofence",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Accesses retrieved successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/{resource}/{uuid}/geofences/{geofence}/attach": {
            "post": {
                "tags": [
                    "Resources"
                ],
                "summary": "Attach geofence to resource.",
                "description": "Returns message JSON Object response.",
                "operationId": "attachResourceGeofence",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Unique identifier of resource",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "resource",
                        "in": "path",
                        "description": "Resource type that need to be considered",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "items": {
                                "type": "string",
                                "default": "devices",
                                "enum": [
                                    "devices",
                                    "users",
                                    "groups",
                                    "pets"
                                ]
                            }
                        }
                    },
                    {
                        "name": "geofence",
                        "in": "path",
                        "description": "Unique identifier of geofence",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource attached to geofence successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/{resource}/{uuid}/geofences/{geofence}/detach": {
            "post": {
                "tags": [
                    "Resources"
                ],
                "summary": "Detach geofence of resource.",
                "description": "Returns message JSON Object response.",
                "operationId": "detachResourceGeofence",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Unique identifier of resource",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "resource",
                        "in": "path",
                        "description": "Resource type that need to be considered",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "items": {
                                "type": "string",
                                "default": "devices",
                                "enum": [
                                    "devices",
                                    "users",
                                    "groups",
                                    "pets"
                                ]
                            }
                        }
                    },
                    {
                        "name": "geofence",
                        "in": "path",
                        "description": "Unique identifier of geofence",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource detached to geofence successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/{resource}/{uuid}/geofences": {
            "get": {
                "tags": [
                    "Resources"
                ],
                "summary": "Get geofences of resource.",
                "description": "Returns the geofences paginated by a default quantity, payload includes pagination links and stats.",
                "operationId": "getResourceGeofences",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Unique identifier of resource",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "resource",
                        "in": "path",
                        "description": "Resource type that need to be considered",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "items": {
                                "type": "string",
                                "default": "devices",
                                "enum": [
                                    "devices",
                                    "users",
                                    "groups",
                                    "pets"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Geofences retrieved successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/{resource}/{uuid}/groups/{group}/attach": {
            "post": {
                "tags": [
                    "Resources"
                ],
                "summary": "Attach group to resource.",
                "description": "Returns message JSON Object response.",
                "operationId": "attachResourceGroup",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Unique identifier of resource",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "resource",
                        "in": "path",
                        "description": "Resource type that need to be considered",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "items": {
                                "type": "string",
                                "default": "devices",
                                "enum": [
                                    "geofences",
                                    "pets",
                                    "devices",
                                    "users"
                                ]
                            }
                        }
                    },
                    {
                        "name": "group",
                        "in": "path",
                        "description": "Unique identifier of group",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource attached to group successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/{resource}/{uuid}/groups/{group}/detach": {
            "post": {
                "tags": [
                    "Resources"
                ],
                "summary": "Detach group of resource.",
                "description": "Returns message JSON Object response.",
                "operationId": "detachResourceGroup",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Unique identifier of resource",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "resource",
                        "in": "path",
                        "description": "Resource type that need to be considered",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "items": {
                                "type": "string",
                                "default": "devices",
                                "enum": [
                                    "geofences",
                                    "pets",
                                    "devices",
                                    "users"
                                ]
                            }
                        }
                    },
                    {
                        "name": "group",
                        "in": "path",
                        "description": "Unique identifier of group",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource detached to group successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/{resource}/{uuid}/groups": {
            "get": {
                "tags": [
                    "Resources"
                ],
                "summary": "Get groups of resource.",
                "description": "Returns the groups paginated by a default quantity, payload includes pagination links and stats.",
                "operationId": "getResourceGroups",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Unique identifier of resource",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "resource",
                        "in": "path",
                        "description": "Resource type that need to be considered",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "items": {
                                "type": "string",
                                "default": "devices",
                                "enum": [
                                    "geofences",
                                    "pets",
                                    "devices",
                                    "users"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Groups retrieved successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/{resource}": {
            "get": {
                "tags": [
                    "Resources"
                ],
                "summary": "Get resources.",
                "description": "Returns the resources paginated by a default quantity, payload includes pagination links and stats.",
                "operationId": "getResources",
                "parameters": [
                    {
                        "name": "resource",
                        "in": "path",
                        "description": "Resource type that need to be considered",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "items": {
                                "type": "string",
                                "default": "devices",
                                "enum": [
                                    "users",
                                    "groups",
                                    "alerts",
                                    "devices",
                                    "geofences",
                                    "pets",
                                    "actions",
                                    "photos"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resources retrieved successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            },
            "post": {
                "tags": [
                    "Resources"
                ],
                "summary": "Create resource.",
                "description": "Returns the recently created resource as JSON Object.",
                "operationId": "createResource",
                "parameters": [
                    {
                        "name": "resource",
                        "in": "path",
                        "description": "Resource type that need to be considered",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "items": {
                                "type": "string",
                                "default": "devices",
                                "enum": [
                                    "users",
                                    "pets",
                                    "groups",
                                    "geofences",
                                    "devices",
                                    "alerts"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User created successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/{resource}/locations": {
            "post": {
                "tags": [
                    "Locations"
                ],
                "summary": "Create location of resource.",
                "description": "Returns the recently created location as JSON Object.",
                "operationId": "createResourceLocation",
                "parameters": [
                    {
                        "name": "api_token",
                        "in": "query",
                        "description": "Resource personal access token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "resource",
                        "in": "path",
                        "description": "Resource type that need to be considered",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "items": {
                                "type": "string",
                                "default": "user",
                                "enum": [
                                    "user",
                                    "devices",
                                    "pet"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource location created successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/{resource}/{uuid}/pets": {
            "get": {
                "tags": [
                    "Resources"
                ],
                "summary": "Get pets of resource.",
                "description": "Returns the pets paginated by a default quantity, payload includes pagination links and stats.",
                "operationId": "getResourcePets",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Unique identifier of resource",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "resource",
                        "in": "path",
                        "description": "Resource type that need to be considered",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "items": {
                                "type": "string",
                                "default": "users",
                                "enum": [
                                    "groups",
                                    "users"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pets retrieved successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/{resource}/{uuid}/photos/{photo}/attach": {
            "post": {
                "tags": [
                    "Resources"
                ],
                "summary": "Attach photo to resource.",
                "description": "Returns message JSON Object response.",
                "operationId": "attachResourcePhoto",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Unique identifier of resource",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "resource",
                        "in": "path",
                        "description": "Resource type that need to be considered",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "items": {
                                "type": "string",
                                "default": "pets",
                                "enum": [
                                    "pets",
                                    "users",
                                    "geofences",
                                    "groups",
                                    "places"
                                ]
                            }
                        }
                    },
                    {
                        "name": "photo",
                        "in": "path",
                        "description": "Unique identifier of photo",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource attached to photo successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/{resource}/{uuid}/photos/{photo}/detach": {
            "post": {
                "tags": [
                    "Resources"
                ],
                "summary": "Detach photo of resource.",
                "description": "Returns message JSON Object response.",
                "operationId": "detachResourcePhoto",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Unique identifier of resource",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "resource",
                        "in": "path",
                        "description": "Resource type that need to be considered",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "items": {
                                "type": "string",
                                "default": "pets",
                                "enum": [
                                    "pets",
                                    "users",
                                    "geofences",
                                    "groups",
                                    "places"
                                ]
                            }
                        }
                    },
                    {
                        "name": "photo",
                        "in": "path",
                        "description": "Unique identifier of photo",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource detached to photo successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/{resource}/{uuid}/photos": {
            "get": {
                "tags": [
                    "Resources"
                ],
                "summary": "Get photos of resource.",
                "description": "Returns the photos paginated by a default quantity, payload includes pagination links and stats.",
                "operationId": "getResourcePhotos",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Unique identifier of resource",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "resource",
                        "in": "path",
                        "description": "Resource type that need to be considered",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "items": {
                                "type": "string",
                                "default": "pets",
                                "enum": [
                                    "pets",
                                    "users",
                                    "geofences",
                                    "groups",
                                    "places"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Photos retrieved successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            },
            "post": {
                "tags": [
                    "Resources"
                ],
                "summary": "Create photo of resource.",
                "description": "Returns the recently created photo as JSON Object.",
                "operationId": "createResourcePhoto",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Unique identifier of resource",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "resource",
                        "in": "path",
                        "description": "Resource type that need to be considered",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "items": {
                                "type": "string",
                                "default": "pets",
                                "enum": [
                                    "pets",
                                    "users",
                                    "geofences",
                                    "groups",
                                    "places"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Photo created successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/{resource}/{uuid}/places": {
            "get": {
                "tags": [
                    "Resources"
                ],
                "summary": "Get places of resource.",
                "description": "Returns the places paginated by a default quantity, payload includes pagination links and stats.",
                "operationId": "getResourcePlaces",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Unique identifier of resource",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "resource",
                        "in": "path",
                        "description": "Resource type that need to be considered",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "items": {
                                "type": "string",
                                "default": "users",
                                "enum": [
                                    "users"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Places retrieved successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/{resource}/{uuid}/reactions": {
            "get": {
                "tags": [
                    "Resources"
                ],
                "summary": "Get reactions stats of resource.",
                "description": "Returns the reactions stats of resource.",
                "operationId": "getResourceReactions",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Unique identifier of resource",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "resource",
                        "in": "path",
                        "description": "Resource type that need to be considered",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "items": {
                                "type": "string",
                                "default": "users",
                                "enum": [
                                    "users",
                                    "geofences",
                                    "pets",
                                    "photos",
                                    "comments"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource reactions retrieved successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            },
            "post": {
                "tags": [
                    "Resources"
                ],
                "summary": "Create reaction of resource.",
                "description": "Returns the empty array as JSON response.",
                "operationId": "storeResourceReaction",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Unique identifier of resource",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "resource",
                        "in": "path",
                        "description": "Resource type that need to be considered",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "items": {
                                "type": "string",
                                "default": "users",
                                "enum": [
                                    "geofences",
                                    "pets",
                                    "users",
                                    "photos",
                                    "comments"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource reaction created successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/{resource}/search": {
            "get": {
                "tags": [
                    "Resources"
                ],
                "summary": "Search resources.",
                "description": "Returns the searched resources paginated by a default quantity, payload includes pagination links and stats.",
                "operationId": "searchResources",
                "parameters": [
                    {
                        "name": "resource",
                        "in": "path",
                        "description": "Resource type that need to be considered",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "items": {
                                "type": "string",
                                "default": "devices",
                                "enum": [
                                    "users",
                                    "groups",
                                    "alerts",
                                    "devices",
                                    "geofences",
                                    "pets",
                                    "actions",
                                    "photos"
                                ]
                            }
                        }
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "The query concept",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resources retrieved successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/{resource}/{uuid}/token": {
            "post": {
                "tags": [
                    "Resources"
                ],
                "summary": "Get specific resource token.",
                "description": "Returns the specified resource token as JSON Object.",
                "operationId": "getResourceToken",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Unique identifier of resource",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "resource",
                        "in": "path",
                        "description": "Resource type that need to be considered",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "items": {
                                "type": "string",
                                "default": "devices",
                                "enum": [
                                    "devices",
                                    "pets"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Token retrieved successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/{resource}/{uuid}/users": {
            "get": {
                "tags": [
                    "Resources"
                ],
                "summary": "Get users of resource.",
                "description": "Returns the users paginated by a default quantity, payload includes pagination links and stats.",
                "operationId": "getResourceUsers",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Unique identifier of resource",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "resource",
                        "in": "path",
                        "description": "Resource type that need to be considered",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "items": {
                                "type": "string",
                                "default": "users",
                                "enum": [
                                    "geofences",
                                    "groups"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Users retrieved successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/token": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get authentication token using user credentials.",
                "description": "Returns the user personal access token.",
                "operationId": "createAccessToken",
                "parameters": [
                    {
                        "name": "username",
                        "in": "query",
                        "description": "Registered user email address",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "Current user password",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Token retrieved successfully"
                    },
                    "401": {
                        "description": "Unauthenticated."
                    }
                }
            }
        },
        "/user": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get authenticated user.",
                "description": "Returns the user as JSON Object.",
                "operationId": "user",
                "responses": {
                    "200": {
                        "description": "User retrieved successfully"
                    },
                    "401": {
                        "description": "Unauthenticated."
                    }
                }
            }
        },
        "/users/{user}/groups/{group}/accept": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Accept invitation to join group of user.",
                "description": "Update the user relationship status of group by setting as ACCEPTED only when user is the authenticated and has one PENDING invitation.",
                "operationId": "acceptUserGroup",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "group",
                        "in": "path",
                        "description": "Group identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User instance accepted to group successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/users/{user}/groups/{group}/block": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Block user invitation to join group.",
                "description": "Update the user relationship status of group by setting as BLOCKED only when user is the authenticated and has one PENDING invitation. This disable to other users send new applications to this user and group.",
                "operationId": "blockUserGroup",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "group",
                        "in": "path",
                        "description": "Group identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User instance blocked to group successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/users/{user}/groups/{group}/invite": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Invite user to group.",
                "description": "Create a relationship between the group and user marked as PENDING. Only the owner group and administrators can submit a new applications.",
                "operationId": "inviteUserGroup",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "group",
                        "in": "path",
                        "description": "Group identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User instance invited to group successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/users/{user}/groups/{group}/reject": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Reject user invitation to join group.",
                "description": "Update the user relationship status of group by setting as REJECTED only when user is the authenticated and has one PENDING invitation.",
                "operationId": "rejectUserGroup",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "group",
                        "in": "path",
                        "description": "Group identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User instance reject to group successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "Specifications related user authentication",
            "externalDocs": {
                "description": "Read more",
                "url": "https://www.alimentalos.cl/about/authentication"
            }
        },
        {
            "name": "Resources",
            "description": "Resources related specifications",
            "externalDocs": {
                "description": "Read more",
                "url": "https://www.alimentalos.cl/about/resources"
            }
        },
        {
            "name": "Find",
            "description": "Find related specifications",
            "externalDocs": {
                "description": "Read more",
                "url": "https://www.alimentalos.cl/about/find"
            }
        },
        {
            "name": "Geofences",
            "description": "Geofences related specifications",
            "externalDocs": {
                "description": "Read more",
                "url": "https://www.alimentalos.cl/about/resources/geofences"
            }
        },
        {
            "name": "Locations",
            "description": "Locations related specifications",
            "externalDocs": {
                "description": "Read more",
                "url": "https://www.alimentalos.cl/about/resources/locations"
            }
        },
        {
            "name": "Near",
            "description": "Near resources related specifications.",
            "externalDocs": {
                "description": "Read more",
                "url": "https://www.alimentalos.cl/about/near"
            }
        },
        {
            "name": "Users",
            "description": "Users related specifications.",
            "externalDocs": {
                "description": "Read more",
                "url": "https://www.alimentalos.cl/about/resources/users"
            }
        }
    ],
    "externalDocs": {
        "description": "Source code",
        "url": "https://github.com/alimentalos/backend"
    }
}